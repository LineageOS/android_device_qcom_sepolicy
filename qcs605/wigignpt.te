# Copyright (c) 2017, The Linux Foundation. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are
# met:
#     * Redistributions of source code must retain the above copyright
#       notice, this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above
#       copyright notice, this list of conditions and the following
#       disclaimer in the documentation and/or other materials provided
#       with the distribution.
#     * Neither the name of The Linux Foundation nor the names of its
#       contributors may be used to endorse or promote products derived
#       from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT
# ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS
# BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
# BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
# OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN
# IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

type wigignpt, domain;
type wigignpt_exec, exec_type, vendor_file_type, file_type;

init_daemon_domain(wigignpt)
#use bypass because net_admin capability is needed
hal_server_domain_bypass(wigignpt, hal_wigig_npt)

#allows calls between client and server and vice-versa
binder_call(hal_wigig_npt_client, hal_wigig_npt_server)
binder_call(hal_wigig_npt_server, hal_wigig_npt_client)

#allow hal clients to find the service
allow hal_wigig_npt_client hal_wigig_npt_hwservice:hwservice_manager find;

#register hal service
add_hwservice(hal_wigig_npt, hal_wigig_npt_hwservice)

# read wigig properties
get_prop(hal_wigig_npt, wigig_prop);

#allow updating network stack parameters under /proc/sys/net
#this also requires net_admin capability
allow hal_wigig_npt proc_net:file rw_file_perms;
allow hal_wigig_npt self:capability net_admin;

#update wigig0 network parameters like rps_cpus and gro_flush_timeout
allow hal_wigig_npt sysfs_wigig:file rw_file_perms;

#update bond0 rps_cpus (FST)
allow hal_wigig_npt sysfs_bond0:file rw_file_perms;

#listen on /dev/socket/wigignpt
allow hal_wigig_npt hal_wigig_npt:unix_stream_socket { listen accept read write };
