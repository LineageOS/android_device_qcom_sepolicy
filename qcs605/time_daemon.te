# Copyright (c) 2018, The Linux Foundation. All rights reserved.

# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are
# met:
#    * Redistributions of source code must retain the above copyright
#      notice, this list of conditions and the following disclaimer.
#    * Redistributions in binary form must reproduce the above
#      copyright notice, this list of conditions and the following
#      disclaimer in the documentation and/or other materials provided
#      with the distribution.
#    * Neither the name of The Linux Foundation nor the names of its
#      contributors may be used to endorse or promote products derived
#      from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT
# ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS
# BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
# BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
# OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN
# IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# Policies for time daemon
type time_daemon, domain, mlstrustedsubject;
type time_daemon_exec, exec_type, vendor_file_type, file_type;
type time_data_file, file_type, data_file_type;

# Make transition to its own time_daemon domain from init
init_daemon_domain(time_daemon)
allow time_daemon smem_log_device:chr_file rw_file_perms;

# Add rules for access permissions
allow time_daemon rtc_device:chr_file r_file_perms;
allow time_daemon alarm_device:chr_file rw_file_perms;

allow time_daemon time_data_file:file create_file_perms;
allow time_daemon time_data_file:dir w_dir_perms;
allow time_daemon self:socket create_socket_perms_no_ioctl;
allow time_daemon self:capability { setuid setgid sys_time };

allow time_daemon persist_time_file:file create_file_perms;
allow time_daemon persist_time_file:dir w_dir_perms;

allow time_daemon persist_file:dir search;

r_dir_file(time_daemon, sysfs_esoc);

userdebug_or_eng(`
  diag_use(time_daemon)
')

allow time_daemon sysfs_data:file r_file_perms;

allow time_daemon self:socket ioctl;
allowxperm time_daemon self:socket ioctl msm_sock_ipc_ioctls;

get_prop(time_daemon, alarm_boot_prop);
