# Copyright (c) 2018, The Linux Foundation. All rights reserved.

# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are
# met:
#    * Redistributions of source code must retain the above copyright
#      notice, this list of conditions and the following disclaimer.
#    * Redistributions in binary form must reproduce the above
#      copyright notice, this list of conditions and the following
#      disclaimer in the documentation and/or other materials provided
#      with the distribution.
#    * Neither the name of The Linux Foundation nor the names of its
#      contributors may be used to endorse or promote products derived
#      from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT
# ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS
# BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
# BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
# OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN
# IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

type location_app, domain;
app_domain(location_app)
binder_use(location_app)
hal_client_domain(location_app, hal_gnss)
hal_client_domain(location_app, hal_perf)
hal_client_domain(location_app, hal_iop)

qmux_socket(location_app)

net_domain(location_app)

#Permissions for JDWP
userdebug_or_eng(`
  allow location_app { adbd su }:unix_stream_socket connectto;
  allow location_app mediaserver_service:service_manager find;
  allow location_app audioserver_service:service_manager find;
  diag_use(location_app)
')

allow location_app surfaceflinger_service:service_manager find;
allow location_app location_app_data_file:dir create_dir_perms;
allow location_app location_app_data_file:file create_file_perms ;
allow location_app location_data_file:dir rw_dir_perms;
allow location_app location_data_file:sock_file create_file_perms;
allow location_app self:socket create_socket_perms;
#allow location_app system_app_data_file:dir r_dir_perms;
allow location_app anr_data_file:dir rw_dir_perms;
allow location_app anr_data_file:file rw_file_perms;
allow location_app { app_api_service activity_service }:service_manager find;
# ioctlcmd=c302
allowxperm location_app self:socket ioctl msm_sock_ipc_ioctls;
allow location_app sysfs:file r_file_perms;
allow location_app sysfs_data:file r_file_perms;
get_prop(location_app, debug_gralloc_prop)
unix_socket_connect(location_app, dpmtcm, dpmd)
