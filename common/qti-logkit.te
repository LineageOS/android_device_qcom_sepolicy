# Copyright (c) 2015-2016, The Linux Foundation. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are
# met:
#     * Redistributions of source code must retain the above copyright
#       notice, this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above
#       copyright notice, this list of conditions and the following
#       disclaimer in the documentation and/or other materials provided
#       with the distribution.
#     * Neither the name of The Linux Foundation nor the names of its
#       contributors may be used to endorse or promote products derived
#       from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT
# ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS
# BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
# BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
# OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN
# IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# qti_logkit
type qti_logkit, domain, mlstrustedsubject;
init_daemon_domain(qti_logkit)
type qti_logkit_exec, exec_type, vendor_file_type, file_type;

# self file access
allow qti_logkit qti_logkit_priv_data_file:dir create_dir_perms;
allow qti_logkit qti_logkit_priv_data_file:file create_file_perms;
allow qti_logkit qti_logkit_pub_data_file:dir create_dir_perms;
allow qti_logkit qti_logkit_pub_data_file:file create_file_perms;

# self socket access
allow qti_logkit qti_logkit_priv_socket:sock_file create_file_perms;
allow qti_logkit qti_logkit_pub_socket:sock_file create_file_perms;
allow qti_logkit qti_logkit_pub_socket:dir create_dir_perms;
allow qti_logkit qti_logkit_priv_socket:dir create_dir_perms;

# allow socket connections to us
net_domain(qti_logkit)

# ver_info.txt
r_dir_file(qti_logkit, firmware_file)

# dmesg
allow qti_logkit kernel:system syslog_read;

# QMUX
qmux_socket(qti_logkit)

userdebug_or_eng(`
  # ramdumps
  allow qti_logkit ramdump_device:chr_file rw_file_perms;

  # drop root privs
  allow qti_logkit self:capability { setuid setgid };

  # tcpdump
  allow qti_logkit self:packet_socket create_socket_perms_no_ioctl;
  allow qti_logkit self:capability net_raw;
  diag_use(qti_logkit)
')

#binder_use(qti_logkit)
allow qti_logkit vendor_shell_exec:file { rx_file_perms };
allow qti_logkit sysfs:file write;
allow qti_logkit system_file:file x_file_perms;
binder_call(qti_logkit, system_server)

# allow logcat access
#read_logd( qti_logkit );

# allow access to recovery directory
allow qti_logkit cache_recovery_file:dir rw_dir_perms;
allow qti_logkit cache_recovery_file:file create_file_perms;

# allow qti_logkit for rawdump partition
allow qti_logkit block_device:dir r_dir_perms;
allow qti_logkit rawdump_block_device:blk_file rw_file_perms;

# allow qti_logkit for sysfs emmc dload node
allow qti_logkit sysfs_emmc_dload:file rw_file_perms;
