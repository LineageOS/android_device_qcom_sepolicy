type mm-qcamerad, domain, domain_deprecated;
type mm-qcamerad_exec, exec_type, file_type;
init_daemon_domain(mm-qcamerad)

#added to support EZTune for camera
userdebug_or_eng(`
  #allow mm-qcamerad debugfs:dir r_dir_perms;
  #allow mm-qcamerad debugfs:file read;
  allow mm-qcamerad camera_data_file:file create_file_perms;
  allow mm-qcamerad self:tcp_socket create_stream_socket_perms;
  allow mm-qcamerad node:tcp_socket node_bind;

  # IMS use camera daemon to make VT call
  allow mm-qcamerad port:tcp_socket name_bind;
  allow mm-qcamerad self:tcp_socket { accept listen };
  allow mm-qcamerad camera_data_file:file create_file_perms;

  # mm-qcamerad needs to set persist.camera. property
  set_prop(mm-qcamerad, camera_prop)
')

#Communicate with user land process through domain socket
type_transition mm-qcamerad system_data_file:sock_file camera_socket "cam_socket1";
type_transition mm-qcamerad system_data_file:sock_file camera_socket "cam_socket2";
allow mm-qcamerad camera_socket:sock_file { create unlink write };
allow mm-qcamerad camera_socket:dir w_dir_perms;
unix_socket_connect(mm-qcamerad, sensors, sensors)

#Allow connections between sensor manager and mm-qcamerad
allow mm-qcamerad system_server:unix_stream_socket rw_socket_perms;
binder_call(mm-qcamerad, system_server);
binder_use(mm-qcamerad);

allow mm-qcamerad self:socket create_socket_perms;
allow mm-qcamerad persist_file:dir r_dir_perms;
allow mm-qcamerad sensors_persist_file:dir r_dir_perms;
allow mm-qcamerad sensors_persist_file:file r_file_perms;

allow mm-qcamerad self:process execmem;

# Interact with other media devices
allow mm-qcamerad video_device:dir r_dir_perms;
allow mm-qcamerad { gpu_device video_device sensors_device }:chr_file rw_file_perms;

allow mm-qcamerad { surfaceflinger mediaserver cameraserver }:fd use;

allow mm-qcamerad camera_data_file:dir w_dir_perms;
allow mm-qcamerad camera_data_file:sock_file { create unlink };

#Allows camera to call ADSP QDSP6 functionality
allow mm-qcamerad qdsp_device:chr_file rw_file_perms;

#Allows sensor service(running in camera daemon) to invoke service manager API
allow mm-qcamerad sensorservice_service:service_manager find;

#allow mm-qcamerad to access /dsp
r_dir_file(mm-qcamerad, adsprpcd_file);

r_dir_file(mm-qcamerad, firmware_file)
allow mm-qcamerad graphics_device:dir r_dir_perms;

#Allow access to /dev/graphics/fb* for screen capture
allow mm-qcamerad graphics_device:chr_file rw_file_perms;

#Allow camera work normally in FFBM
binder_call(mm-qcamerad, mmi);

#Allow camera to access laser nodes
allow mm-qcamerad input_device:dir r_dir_perms;
allow mm-qcamerad input_device:chr_file r_file_perms;
allow mm-qcamerad sysfs:file rw_file_perms;

# /data/fdAlbum
type_transition mm-qcamerad system_data_file:file camera_data_file "fdAlbum";
allow mm-qcamerad camera_data_file:file create_file_perms;
