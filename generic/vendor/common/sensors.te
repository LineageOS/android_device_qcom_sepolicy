# Copyright (c) 2018, The Linux Foundation. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are
# met:
#     * Redistributions of source code must retain the above copyright
#       notice, this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above
#       copyright notice, this list of conditions and the following
#       disclaimer in the documentation and/or other materials provided
#       with the distribution.
#     * Neither the name of The Linux Foundation nor the names of its
#       contributors may be used to endorse or promote products derived
#       from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT
# ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS
# BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
# BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
# OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN
# IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
# Policy for sensor daemon
type sensors, domain;
type sensors_exec, exec_type, vendor_file_type, file_type;

init_daemon_domain(sensors)
get_prop(sensors, sensors_prop)

allow sensors self:capability {
    setuid
    setgid
    net_bind_service
};

# Access to tests from userdebug/eng builds
userdebug_or_eng(`
  diag_use(sensors)
  get_prop(sensors, sensors_dbg_prop)

  #allow starting of diag_mdlog
  allow sensors qlogd_exec:file rx_file_perms;
  allow sensors vendor_shell_exec:file rx_file_perms;
')

allow sensors self:{ socket qipcrtr_socket } create_socket_perms;
# ioctlcmd=c304
allowxperm sensors self:{ socket qipcrtr_socket } ioctl msm_sock_ipc_ioctls;

allow sensors mnt_vendor_file:dir r_dir_perms;

allow sensors sensors_vendor_data_file:dir create_dir_perms;
allow sensors sensors_vendor_data_file:file create_file_perms;

allow sensors system_file:dir r_dir_perms;
allow sensors sensors_device:chr_file rw_file_perms;

allow sensors sysfs_soc:file w_file_perms;
allow sensors sysfs_data:file r_file_perms;

allow sensors ion_device:chr_file r_file_perms;
allow sensors qdsp_device:chr_file r_file_perms;
allow sensors xdsp_device:chr_file r_file_perms;

# For reading dir/files on /dsp
r_dir_file(sensors, adsprpcd_file)
# For reading adsprpc_prop
get_prop(sensors, vendor_adsprpc_prop)

allow sensors persist_sensors_file:fifo_file create_file_perms;
# Access to /persist/sensors
allow sensors persist_sensors_file:dir create_dir_perms;
allow sensors persist_sensors_file:file create_file_perms;
# Access to wakelock sysfs
wakelock_use(sensors)
