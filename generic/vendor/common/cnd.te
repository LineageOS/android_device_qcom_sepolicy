# Copyright (c) 2018-2019, The Linux Foundation. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are
# met:
#     * Redistributions of source code must retain the above copyright
#       notice, this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above
#       copyright notice, this list of conditions and the following
#       disclaimer in the documentation and/or other materials provided
#       with the distribution.
#     * Neither the name of The Linux Foundation nor the names of its
#       contributors may be used to endorse or promote products derived
#       from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT
# ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS
# BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
# BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
# OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN
# IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
type cnd, domain;
type cnd_exec, exec_type, vendor_file_type, file_type;
file_type_auto_trans(cnd, socket_device, cnd_socket);

# cnd is started by init, type transit from init domain to cnd domain
init_daemon_domain(cnd)

#communicating with QTI wlan driver for WFC/ VTiWLAN quality
allow cnd self:capability net_bind_service;
unix_socket_send(cnd, wpa, hal_wifi_supplicant)
allow cnd wpa_data_file:dir w_dir_perms;
allow cnd wpa_data_file:sock_file create_file_perms;

#allow processing of VoWifi indications from modem over QMI while dozing
allow cnd self:capability2 block_suspend;

allow cnd self:udp_socket create_socket_perms;
allow cnd self:{
    # Allow receiving NETLINK responses from WLAN driver.
    netlink_socket
    netlink_generic_socket
    qipcrtr_socket
} create_socket_perms_no_ioctl;

allowxperm cnd self:udp_socket ioctl SIOCGIFMTU;

allow cnd sysfs_data:file r_file_perms;

allow cnd proc_meminfo:file r_file_perms;

set_prop(cnd, cnd_prop)

# allow cnd to access cnd_data_file
allow cnd cnd_data_file:file create_file_perms;
allow cnd cnd_data_file:sock_file { unlink create setattr };
allow cnd cnd_data_file:dir rw_dir_perms;

# allow cnd to obtain wakelock
wakelock_use(cnd)

allow cnd ipa_vendor_data_file:dir r_dir_perms;
allow cnd ipa_vendor_data_file:file r_file_perms;

# To register cnd to hwbinder
add_hwservice(cnd, hal_datafactory_hwservice)
hwbinder_use(cnd)
get_prop(cnd, hwservicemanager_prop)
binder_call(cnd, dataservice_app)
binder_call(cnd, qtidataservices_app)
binder_call(cnd, ims)
binder_call(cnd, location)

r_dir_file(cnd, sysfs_ssr)

#diag
userdebug_or_eng(`
    diag_use(cnd)
	r_dir_file(cnd, sysfs_diag)
')
